name: Release to npm

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.2.3)"
        required: false
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  id-token: write

env:
  NODE_VERSION: '20'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build
        if: hashFiles('template/package.json') == ''
        run: |
          # For template-only starters there may be nothing to build at root
          echo "No build step required"

      - name: Set version from tag (if present)
        id: version
        run: |
          TAG_REF="${GITHUB_REF##*/}"
          if [[ "$TAG_REF" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            VERSION="${TAG_REF#v}"
          else
            VERSION="${{ github.event.inputs.version }}"
          fi
          if [ -n "$VERSION" ]; then
            echo "version=$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Update package version (root)
        if: steps.version.outputs.version != '' && hashFiles('package.json') != ''
        run: |
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Update package version (template)
        if: steps.version.outputs.version != '' && hashFiles('template/package.json') != ''
        run: |
          cd template
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Publish root package if exists
        if: hashFiles('package.json') != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --provenance --access public

      - name: Publish template package if exists
        if: hashFiles('template/package.json') != ''
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd template
          npm publish --provenance --access public

      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true

