name: Sync from Upstream and Open PR

on:
  workflow_dispatch:
    inputs:
      upstream_repo:
        description: "owner/repo of upstream source"
        required: false
      upstream_branch:
        description: "Branch to sync from"
        required: false
        default: main
  schedule:
    - cron: "17 3 * * *" # daily

permissions:
  contents: write
  pull-requests: write

env:
  DEFAULT_UPSTREAM_REPO: ${{ vars.UPSTREAM_REPO }}
  DEFAULT_UPSTREAM_BRANCH: ${{ vars.UPSTREAM_BRANCH || 'main' }}

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout target repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Determine upstream
        id: upstream
        run: |
          # Prefer manual input, then org-level repo var, then fallback to required secret
          UPSTREAM_REPO="${{ github.event.inputs.upstream_repo }}"
          if [ -z "$UPSTREAM_REPO" ]; then
            UPSTREAM_REPO="$DEFAULT_UPSTREAM_REPO"
          fi
          if [ -z "$UPSTREAM_REPO" ]; then
            echo "::error::Set repository variable UPSTREAM_REPO (owner/repo) or provide workflow input upstream_repo"
            exit 1
          fi
          UPSTREAM_BRANCH_INPUT="${{ github.event.inputs.upstream_branch }}"
          if [ -z "$UPSTREAM_BRANCH_INPUT" ]; then
            UPSTREAM_BRANCH_INPUT="$DEFAULT_UPSTREAM_BRANCH"
          fi
          echo "repo=$UPSTREAM_REPO" >> $GITHUB_OUTPUT
          echo "branch=$UPSTREAM_BRANCH_INPUT" >> $GITHUB_OUTPUT

      - name: Add upstream remote and fetch
        env:
          REPO: ${{ steps.upstream.outputs.repo }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git remote add upstream https://github.com/$REPO.git
          git fetch upstream

      - name: Create sync branch
        env:
          BRANCH: ${{ steps.upstream.outputs.branch }}
        run: |
          set -e
          SYNC_BRANCH="chore/sync-upstream-$(date +%Y%m%d-%H%M%S)"
          echo "SYNC_BRANCH=$SYNC_BRANCH" >> $GITHUB_ENV
          git switch -c "$SYNC_BRANCH"
          git merge --no-edit --no-ff "upstream/$BRANCH" || true

      - name: Detect changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Commit merge if needed
        if: steps.changes.outputs.changed == 'true'
        run: |
          # In case of auto-mergable changes without commit, stage and commit
          git add -A
          if ! git diff --cached --quiet; then
            git commit -m "chore(sync): merge from upstream"
          fi

      - name: Open Pull Request
        if: steps.changes.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ env.SYNC_BRANCH }}
          title: "chore(sync): update from upstream ${{ steps.upstream.outputs.repo }}@${{ steps.upstream.outputs.branch }}"
          body: |
            This PR includes changes synced from `${{ steps.upstream.outputs.repo }}` on branch `${{ steps.upstream.outputs.branch }}`.

            - Please review diffs.
            - Resolve any conflicts if present.
          labels: chore, sync
          draft: false

      - name: No changes
        if: steps.changes.outputs.changed != 'true'
        run: echo "No upstream changes detected."

